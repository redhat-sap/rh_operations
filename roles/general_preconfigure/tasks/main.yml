# SPDX-License-Identifier: GPL-3.0-only
# SPDX-FileCopyrightText: 2024 Red Hat, Project Atmosphere
#
# Copyright 2024 Red Hat, Project Atmosphere
#
# This program is free software: you can redistribute it and/or modify it under the terms of the GNU
# General Public License as published by the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# You should have received a copy of the GNU General Public License along with this program.
# If not, see <https://www.gnu.org/licenses/>.

---
- name: Gather necessary facts
  ansible.builtin.setup:

- name: Configure selinux
  ansible.posix.selinux:
    state: "{{ general_preconfigure_selinux['state'] }}"
    policy: "{{ general_preconfigure_selinux['policy'] }}"
  become: true
  become_user: root

- name: Configure tmpfs
  ansible.posix.mount:
    fstype: tmpfs
    opts: "defaults,size={{ general_preconfigure_tmpfs_size_gb }}G"
    path: /dev/shm
    src: tmpfs
    state: mounted
  become: true
  become_user: root

- name: Make sure packages are present
  ansible.builtin.include_role:
    name: sap.sap_operations.general_preconfigure
    tasks_from: packages

- name: Configure services
  ansible.builtin.systemd:
    name: "{{ service.name }}"
    state: "{{ service.state }}"
    enabled: "{{ service.enabled }}"
  loop: "{{ general_preconfigure_services }}"
  loop_control:
    loop_var: service
    label: "{{ service.name }}"
  become: true
  become_user: root

- name: Ensure kernel parameters are set
  ansible.posix.sysctl:
    name: "{{ parameter.name }}"
    value: "{{ parameter.value }}"
    sysctl_file: /etc/sysctl.d/sap.conf
  loop: "{{ general_preconfigure_kernel_parameters }}"
  loop_control:
    loop_var: parameter
    label: "Parameter `{{ parameter.name }}` set to value=`{{ parameter.value }}`"
  become: true
  become_user: root

- name: Make sure ulimits are set for SAP
  ansible.builtin.lineinfile:
    path: "{{ __path }}"
    create: true
    mode: "0644"
    regexp: "{{ __regexp }}"
    line: "{{ __line }}"
  loop: "{{ general_preconfigure_limits }}"
  loop_control:
    loop_var: limit
    label: "echo '{{ __line }}' > {{ __path }}"
  vars:
    __path: /etc/security/limits.d/99-sap.conf
    __line: "{{ limit.domain }}\t{{ limit.type }}\t{{ limit.item }}\t{{ limit.value }}"
    __regexp: "{{ __regexp_not_escaped | ansible.builtin.regex_escape }}"
    __regexp_not_escaped: '^{{ limit.domain }}\s+{{ limit.type }}\s+{{ limit.item }}\s.*'
  become: true
  become_user: root

- name: Make sure tmpfile.d configured
  ansible.builtin.template:
    src: tmpfiles.d
    dest: /etc/tmpfiles.d/sap.conf
    owner: root
    group: root
    mode: "0644"
    backup: true
  become: true
  become_user: root

- name: Run configuration steps for each RHEL release
  ansible.builtin.include_tasks:
    file: "rhel-{{ ansible_facts['distribution_major_version'] }}.yml"

- name: Flush handlers (if reboot = now)
  ansible.builtin.meta: flush_handlers
  when: general_preconfigure_reboot == 'now'
