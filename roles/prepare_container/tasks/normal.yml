---
# SPDX-License-Identifier: GPL-3.0-only
# SPDX-FileCopyrightText: 2023 Red Hat, Project Atmosphere
#
# Copyright 2023 Red Hat, Project Atmosphere
#
# This program is free software: you can redistribute it and/or modify it under the terms of the GNU
# General Public License as published by the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# You should have received a copy of the GNU General Public License along with this program.
# If not, see <https://www.gnu.org/licenses/>.

- name: Who am i
  ansible.builtin.command:
    cmd: whoami
  changed_when: false
  register: prepare_container_whoami
  failed_when: prepare_container_whoami.stdout != 'root'

- name: Ensure required packages are present
  ansible.builtin.dnf:
    name: "{{ prepare_container_packages_present }}"
    state: present

- name: Ensure required packages are absent
  ansible.builtin.dnf:
    name: "{{ prepare_container_packages_absent }}"
    state: absent

- name: List enabled repos
  ansible.builtin.command:
    cmd: dnf repolist
  environment:
    SMDEV_CONTAINER_OFF: "1"
  register: prepare_container_dnf_repolist
  changed_when: false

- name: Disable all UBI repos
  ansible.builtin.command:
    cmd: dnf config-manager --set-disabled "{{ repo_id }}"
  environment:
    SMDEV_CONTAINER_OFF: "1"
  loop: "{{ prepare_container_dnf_repolist.stdout_lines }}"
  loop_control:
    loop_var: line
  vars:
    repo_id: "{{ line | split(' ') | first }}"
  when: "'ubi' in repo_id"
  changed_when: prepare_container_dnf_repolist.rc == 0
  failed_when: prepare_container_dnf_repolist.rc != 0
