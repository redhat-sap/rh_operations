# SPDX-License-Identifier: GPL-3.0-only
# SPDX-FileCopyrightText: 2024 Red Hat, Project Atmosphere
#
# Copyright 2024 Red Hat, Project Atmosphere
#
# This program is free software: you can redistribute it and/or modify it under the terms of the GNU
# General Public License as published by the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# You should have received a copy of the GNU General Public License along with this program.
# If not, see <https://www.gnu.org/licenses/>.

---
- name: Ensure ansible_facts used by the role
  ansible.builtin.setup:
    gather_subset:
      - mounts

- name: Get information about what will be downloaded
  sap.sap_operations.me_downloaditemset_info:
    username: "{{ download_username }}"
    password: "{{ download_password }}"
    alias: "{{ download_alias }}"
    architecture: "{{ download_architecture }}"
    os_family: "{{ download_os_family }}"
  register: download_itemset

- name: Get information for each file that is about to be downloaded
  sap.sap_operations.me_file_info:
    username: "{{ download_username }}"
    password: "{{ download_password }}"
    file_id: "{{ item.Fastkey }}"
  loop: "{{ download_itemset_filtered }}"
  loop_control:
    label: "{{ item.Description }} - {{ item.Title }}"
  register: download_files_info

- name: Fail if not enough disk space on destination mount point
  ansible.builtin.fail:
    msg: "
      There are only {{ __mount_point['size_available'] // 1024 }}KB available on the {{ download_destination }},
      but {{ __size_needed }}KB are required to download."
  when:
    - ansible_facts['mounts'] is defined
    - ansible_facts['mounts'] | length > 0
    - (__mount_point['size_available'] // 1024) | int <= __size_needed | int
  vars:
    __mount_point: "{{ ansible_facts['mounts'] |
      sap.sap_operations.mount_path(filepath=download_destination) }}"
    __size_needed: "{{ download_itemset.me_downloaditemset_info |
      map(attribute='FileSize') | map('trim') | map('int') | sum }}"

- name: Find all files in download_destination
  ansible.builtin.find:
    paths: "{{ download_destination }}"
    file_type: file
  register: download_destination_files

- name: Get stats on files in download_destination (only for files that are to be downloaded)
  ansible.builtin.stat:
    path: "{{ item.path }}"
    checksum_algorithm: sha256
  register: download_destination_stats
  loop: "{{ download_destination_files.files }}"
  when: (item.path | basename) in (download_itemset_filtered | map(attribute='Title'))
  loop_control:
    label: "{{ item.path }}"

- name: Remove variable download_register_last
  ansible.builtin.set_fact:
    download_register_last: {}

- name: Process files to be downloaded
  ansible.builtin.include_tasks:
    file: process_file.yml
  vars:
    download_file_checksum: "{{ item.me_file_info.Checksum }}"
    download_file_url: "{{
      item.item.DirectDownloadUrl |
      default(item.item.DownloadDirectLink)
      }}"
    download_file_filename: "{{ item.me_file_info.FileName }}"
    download_file_filepath: "{{ (download_destination, item_filename) | ansible.builtin.path_join }}"
    download_file_existing_file_checksum: >-
      {{ download_destination_stats.results
      | selectattr('stat', 'defined')
      | map(attribute='stat')
      | selectattr('path', 'equalto', download_file_filepath)
      | map(attribute='checksum')
      | first
      | default("")
      }}
    download_file_existing_file_filepath: "{{ (download_destination, item_filename) | ansible.builtin.path_join }}"
    item_filename: "{{ item.me_file_info.FileName }}"
  loop: "{{ download_files_info.results }}"
  loop_control:
    label: "{{ download_file_url }} - {{ item_filename }}"
